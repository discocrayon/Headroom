# Auto-generated Terraform configuration for AWS Organizations structure
# Generated by Headroom for SCP/RCP deployment targeting

# Get the root OU ID
data "aws_organizations_organization" "org" {}

data "aws_organizations_organizational_units" "root_ou" {
  parent_id = data.aws_organizations_organization.org.roots[0].id
}

# Get accounts for each top-level OU
data "aws_organizations_organizational_unit_child_accounts" "acme_acquisition_accounts" {
  parent_id = [
    for ou in data.aws_organizations_organizational_units.root_ou.children :
    ou.id if ou.name == "acme_acquisition"
  ][0]
}

data "aws_organizations_organizational_unit_child_accounts" "high_value_assets_accounts" {
  parent_id = [
    for ou in data.aws_organizations_organizational_units.root_ou.children :
    ou.id if ou.name == "high_value_assets"
  ][0]
}

data "aws_organizations_organizational_unit_child_accounts" "shared_services_accounts" {
  parent_id = [
    for ou in data.aws_organizations_organizational_units.root_ou.children :
    ou.id if ou.name == "shared_services"
  ][0]
}

locals {
  # Validation check for root OU access
  validation_check_root = (length(data.aws_organizations_organization.org.roots) == 1) ? "All good. This is a no-op." : error("[Error] Expected exactly 1 root OU, found ${length(data.aws_organizations_organization.org.roots)}")

  # Root OU ID
  root_ou_id = data.aws_organizations_organization.org.roots[0].id

  # Top-level OU IDs by name
  # Validation for acme_acquisition OU
  validation_check_acme_acquisition_ou = (length([for ou in data.aws_organizations_organizational_units.root_ou.children : ou.id if ou.name == "acme_acquisition"]) == 1) ? "All good. This is a no-op." : error("[Error] Expected exactly 1 acme_acquisition OU, found ${length([for ou in data.aws_organizations_organizational_units.root_ou.children : ou.id if ou.name == "acme_acquisition"])}")

  top_level_acme_acquisition_ou_id = [
    for ou in data.aws_organizations_organizational_units.root_ou.children :
    ou.id if ou.name == "acme_acquisition"
  ][0]

  # Validation for high_value_assets OU
  validation_check_high_value_assets_ou = (length([for ou in data.aws_organizations_organizational_units.root_ou.children : ou.id if ou.name == "high_value_assets"]) == 1) ? "All good. This is a no-op." : error("[Error] Expected exactly 1 high_value_assets OU, found ${length([for ou in data.aws_organizations_organizational_units.root_ou.children : ou.id if ou.name == "high_value_assets"])}")

  top_level_high_value_assets_ou_id = [
    for ou in data.aws_organizations_organizational_units.root_ou.children :
    ou.id if ou.name == "high_value_assets"
  ][0]

  # Validation for shared_services OU
  validation_check_shared_services_ou = (length([for ou in data.aws_organizations_organizational_units.root_ou.children : ou.id if ou.name == "shared_services"]) == 1) ? "All good. This is a no-op." : error("[Error] Expected exactly 1 shared_services OU, found ${length([for ou in data.aws_organizations_organizational_units.root_ou.children : ou.id if ou.name == "shared_services"])}")

  top_level_shared_services_ou_id = [
    for ou in data.aws_organizations_organizational_units.root_ou.children :
    ou.id if ou.name == "shared_services"
  ][0]

  # Account IDs by name
  # Validation for acme-co account
  validation_check_acme_co_account = (length([for account in data.aws_organizations_organizational_unit_child_accounts.acme_acquisition_accounts.accounts : account.id if account.name == "acme-co"]) == 1) ? "All good. This is a no-op." : error("[Error] Expected exactly 1 acme-co account, found ${length([for account in data.aws_organizations_organizational_unit_child_accounts.acme_acquisition_accounts.accounts : account.id if account.name == "acme-co"])}")

  acme_co_account_id = [
    for account in data.aws_organizations_organizational_unit_child_accounts.acme_acquisition_accounts.accounts :
    account.id if account.name == "acme-co"
  ][0]

  # Validation for fort-knox account
  validation_check_fort_knox_account = (length([for account in data.aws_organizations_organizational_unit_child_accounts.high_value_assets_accounts.accounts : account.id if account.name == "fort-knox"]) == 1) ? "All good. This is a no-op." : error("[Error] Expected exactly 1 fort-knox account, found ${length([for account in data.aws_organizations_organizational_unit_child_accounts.high_value_assets_accounts.accounts : account.id if account.name == "fort-knox"])}")

  fort_knox_account_id = [
    for account in data.aws_organizations_organizational_unit_child_accounts.high_value_assets_accounts.accounts :
    account.id if account.name == "fort-knox"
  ][0]

  # Validation for security-tooling account
  validation_check_security_tooling_account = (length([for account in data.aws_organizations_organizational_unit_child_accounts.high_value_assets_accounts.accounts : account.id if account.name == "security-tooling"]) == 1) ? "All good. This is a no-op." : error("[Error] Expected exactly 1 security-tooling account, found ${length([for account in data.aws_organizations_organizational_unit_child_accounts.high_value_assets_accounts.accounts : account.id if account.name == "security-tooling"])}")

  security_tooling_account_id = [
    for account in data.aws_organizations_organizational_unit_child_accounts.high_value_assets_accounts.accounts :
    account.id if account.name == "security-tooling"
  ][0]

  # Validation for shared-foo-bar account
  validation_check_shared_foo_bar_account = (length([for account in data.aws_organizations_organizational_unit_child_accounts.shared_services_accounts.accounts : account.id if account.name == "shared-foo-bar"]) == 1) ? "All good. This is a no-op." : error("[Error] Expected exactly 1 shared-foo-bar account, found ${length([for account in data.aws_organizations_organizational_unit_child_accounts.shared_services_accounts.accounts : account.id if account.name == "shared-foo-bar"])}")

  shared_foo_bar_account_id = [
    for account in data.aws_organizations_organizational_unit_child_accounts.shared_services_accounts.accounts :
    account.id if account.name == "shared-foo-bar"
  ][0]

}
